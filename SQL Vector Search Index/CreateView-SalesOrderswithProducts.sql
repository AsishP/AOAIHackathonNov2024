/**
With SalesLT Schema
**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
AI-generated code may be incorrect. Humans should carefully review, test, and validate all content generated by Copilot.
Prompt: Create a view that gives details of all Sales Orders with Products and Customer
Explanation: The provided SQL query creates a view that consolidates essential information 
             about sales orders, products, and customers. It joins the `SalesOrderHeader` table 
             (which contains order details) with the `Customer` table (for customer information) 
             and the `SalesOrderDetail` table (which links orders to specific products). 
             Additionally, it joins the `Product` table to retrieve product names. This comprehensive 
             selection of columns ensures that the view includes all relevant details about each sales 
             order, including customer names and product specifics, thereby directly addressing the 
             user's request for a detailed overview of sales orders with associated products and 
             customers.
*/
CREATE VIEW [SalesLT].[vw_SalesOrdersWithProductsAndCustomer] AS
SELECT 
    sod.SalesOrderDetailID,
    soh.SalesOrderID,
    soh.SalesOrderNumber,
    soh.OrderDate,
    soh.Status,
    soh.TotalDue,
    c.CustomerID,
    c.CompanyName,
    c.FirstName,
    c.LastName,
    sod.ProductID,
    p.Name AS ProductName,
    sod.OrderQty,
    sod.UnitPrice,
    sod.LineTotal
FROM 
    SalesLT.SalesOrderHeader AS soh
JOIN 
    SalesLT.Customer AS c ON soh.CustomerID = c.CustomerID
JOIN 
    SalesLT.SalesOrderDetail AS sod ON soh.SalesOrderID = sod.SalesOrderID
JOIN 
    SalesLT.Product AS p ON sod.ProductID = p.ProductID;
GO


-- /** Create View with dbo schema **/
-- SET ANSI_NULLS ON
-- GO
-- SET QUOTED_IDENTIFIER ON
-- GO
-- /*
-- AI-generated code may be incorrect. Humans should carefully review, test, and validate all content generated by Copilot.
-- Prompt: Create a view that gives details of all Sales Orders with Products and Customer
-- Explanation: The provided SQL query creates a view that consolidates essential information 
--              about sales orders, products, and customers. It joins the `SalesOrderHeader` table 
--              (which contains order details) with the `Customer` table (for customer information) 
--              and the `SalesOrderDetail` table (which links orders to specific products). 
--              Additionally, it joins the `Product` table to retrieve product names. This comprehensive 
--              selection of columns ensures that the view includes all relevant details about each sales 
--              order, including customer names and product specifics, thereby directly addressing the 
--              user's request for a detailed overview of sales orders with associated products and 
--              customers.
-- */
-- CREATE VIEW [dbo].[vw_SalesOrdersWithProductsAndCustomer] AS
-- SELECT 
--     sod.SalesOrderDetailID,
--     soh.SalesOrderID,
--     soh.SalesOrderNumber,
--     soh.OrderDate,
--     soh.Status,
--     soh.TotalDue,
--     c.CustomerID,
--     c.CompanyName,
--     c.FirstName,
--     c.LastName,
--     sod.ProductID,
--     p.Name AS ProductName,
--     sod.OrderQty,
--     sod.UnitPrice,
--     sod.LineTotal
-- FROM 
--     dbo.SalesOrderHeader AS soh
-- JOIN 
--     dbo.Customer AS c ON soh.CustomerID = c.CustomerID
-- JOIN 
--     dbo.SalesOrderDetail AS sod ON soh.SalesOrderID = sod.SalesOrderID
-- JOIN 
--     dbo.Product AS p ON sod.ProductID = p.ProductID;
-- GO
-- **/